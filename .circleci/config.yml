version: 2
jobs:
  build:
    machine: circleci/node:7.10

    working_directory: ~/dockerised-bot

    steps:
      - checkout
      - setup_remote_docker:

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar

      - run:
         name: Build Docker image
         command: docker build --cache-from=app -t nodejs-ipfs-backend-template .

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

      - run:
          name: Deploy to Heroku
          command: |
             docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
             docker tag nodejs-ipfs-backend-template registry.heroku.com/$HEROKU_APP_NAME/web
             docker push registry.heroku.com/$HEROKU_APP_NAME/web
             
workflows:
  version: 2
  jobs:
      - build

# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:10.15
      
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#           - v1-dependencies-{{ checksum "package.json" }}
#           # fallback to using the latest cache if no exact match is found
#           - v1-dependencies-

#       - run: npm install

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}
        
#       # run linting!
#       - run: npm run lint

#       # run tests!
#       - run: npm test

#   deploy:
#     docker:
#       - image: buildpack-deps:trusty
#     steps:
#       - checkout
#       - run:
#           name: Deploy Master to Heroku
#           command: |
#             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

# workflows:
#   version: 2
#   build-deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only: master